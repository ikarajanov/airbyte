version: "0.29.0"

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: []
  requester:
    type: HttpRequester
    url_base: "https://businessprofileperformance.googleapis.com/v1"
    http_method: "GET"
    authenticator:
      type: "OAuthAuthenticator"
      token_refresh_endpoint: "https://oauth2.googleapis.com/token?grant_type=refresh_token"
      client_id: "{{ config.client_id }}"
      client_secret: "{{ config.client_secret }}"
      refresh_token: "{{ config.refresh_token }}"
    # request_headers:
    #   X-AP-Context: orgId={{ config.org_id }}
    error_handler:
      response_filters:
        - http_codes: [500, 429]
          action: RETRY
      backoff_strategies:
        - type: "ExponentialBackoffStrategy"
  retriever:
    requester:
      $ref: "#/definitions/requester"
  base_stream:
    selector:
      extractor:
        # field_path: ["data"]
        field_path: []
    retriever:
      $ref: "#/definitions/retriever"
      record_selector:
        $ref: "#/definitions/base_stream/selector"
    # transformations:
    #   - type: AddFields
    #     fields:
    #       start_date_str:
    #         value: >-
    #           {% import 'macros.jinja' as macros %}
    #           {{ macros.complex_date_to_string(config.get('start_date')) }}
    #   - type: AddFields
    #     fields:
    #       end_date_str:
    #         value: >-
    #           {% import 'macros.jinja' as macros %}
    #           {{ macros.complex_date_to_string(config.get('end_date')) }}
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: date
      start_datetime:
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%d"
      end_datetime:
        datetime: "{{ now_utc().strftime('%Y-%m-%d') }}"
        datetime_format: "%Y-%m-%d"
      step: "P1D"
      datetime_format: "%Y-%m-%d"
      cursor_granularity: "P1D"
      # start_datetime:
      #   type: MinMaxDatetime
      #   datetime: >-
      #     {{ format_datetime(config.get('start_date'), "%Y-%m-%d") }}
      #   datetime_format: "%Y-%m-%d"
      # end_datetime:
      #   type: MinMaxDatetime
      #   datetime: >-
      #     {{ format_datetime(end_date_str if config.get('end_date') else
      #     now_utc(), "%Y-%m-%d") }}
      #   datetime_format: "%Y-%m-%d"
      # start_time_option:
      #   type: RequestOption
      #   field_name: start_time
      #   inject_into: request_parameter
      # end_time_option:
      #   type: RequestOption
      #   field_name: end_time
      #   inject_into: request_parameter
      # step: "P{{ config.get('time_window', 7) }}D"
      # cursor_granularity: PT1S

      # paginator:
      #   type: DefaultPaginator
      #   pagination_strategy:
      #     type: OffsetIncrement
      #     page_size: 100
      #   page_size_option:
      #     inject_into: request_parameter
      #     field_name: limit
      #   page_token_option:
      #     type: RequestOption
      #     field_name: offset
      #     inject_into: request_parameter

  customers_stream:
    $ref: "#/definitions/base_stream"
    name: "customers"
    primary_key: "id"
    $parameters:
      path: "/example"

  base_info_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "base_info"
      primary_key: "date"
      path: "{{ config.location_id }}:fetchMultiDailyMetricsTimeSeries?dailyMetrics=WEBSITE_CLICKS&dailyMetrics=CALL_CLICKS&dailyMetrics=BUSINESS_BOOKINGS&dailyRange.start_date.year={{ stream_slice['start_time'].split('-')[0] }}&dailyRange.start_date.month={{ stream_slice['start_time'].split('-')[1] }}&dailyRange.start_date.day={{ stream_slice['start_time'].split('-')[2] }}&dailyRange.end_date.year={{ stream_slice['end_time'].split('-')[0] }}&dailyRange.end_date.month={{ stream_slice['end_time'].split('-')[1] }}&dailyRange.end_date.day={{ stream_slice['end_time'].split('-')[2] }}"
    base_incremental_stream: "date" 

streams:
  - "#/definitions/base_info_stream"

check:
  type: CheckStream
  stream_names:
    - "base_info"

spec:
  type: Spec
  documentation_url: https://docs.airbyte.com/integrations/sources/google-business-profile-performance
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    title: Google Business Profile Performance Spec
    type: object
    required:
      - refresh_token
      - client_id
      - client_secret
      - location_id
      - start_date
    additionalProperties: true
    properties:
      refresh_token:
        type: string
        description: User's refresh token. The token is case sensitive.
        airbyte_secret: true
      client_id:
        type: string
        description: Client id
        airbyte_secret: true
      client_secret:
        type: string
        description: Client secret
        airbyte_secret: true
      location_id:
        type: string
        description: Location id to sync data for
      start_date:
        title: Start Date
        description:
          The Start date for collecting reports, should not be more than
          60 days in the past. In YYYY-MM-DD format
        pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        format: date
        examples:
          - "2022-10-10"
          - "2022-10-22"
        type: string
